name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  standard:
    name: Standard
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update
        run: ./scripts/update
      - name: Test
        run: ./scripts/test
  extra-requires:
    name: Extra requires
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install with extra_requires
        run: pip install '.[all]'
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Test
        run: ./scripts/test
  minimum-versions:
    name: Minimum versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup
        with:
          python-version: ${{ matrix.python-version }}
          pip-cache-hash: ${{ hashFiles('requirements-min.txt', 'requirements-dev.txt') }}
      - name: Install minimum requirements
        run: pip install -r requirements-min.txt
      - name: Install the package
        run: pip install .
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Check minimum requirements
        run: scripts/check_minimum_requirements
      - name: Test
        run: scripts/test
  pre-release-versions:
    name: Pre-release versions
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update
        run: scripts/update
      - name: Install pre-release versions of rasterio and pystac
        run: pip install -U --pre pystac rasterio
      - name: Run tests
        run: scripts/test
  codecov:
    name: Codecov
    needs:
      - standard
      - extra-requires
      - minimum-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Execute linters and test suites
        run: ./scripts/cibuild
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false